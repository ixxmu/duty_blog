<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github on 生信文集</title><link>https://ixxmu.github.io/tags/github/</link><description>Recent content in Github on 生信文集</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 19 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ixxmu.github.io/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>给 Github 添加 ssh 连接方式并排错</title><link>https://ixxmu.github.io/posts/play/clone-your-projects-from-github-via-ssh-and-troubleshooting/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://ixxmu.github.io/posts/play/clone-your-projects-from-github-via-ssh-and-troubleshooting/</guid><description>Github放弃了账号密码的验证方式，所以需要重新设定链接方式。
为何要有此一折腾？
Github 在08月15日彻底丢弃了账号密码验证的登录方式，之前的账号密码验证方式失效; 因为本身是在Rstudio上建目录，所以用的是普通用户，不是root账户，root账户下按照网上教程没有任何问题,
普通用户就是无法成功clone项目，因为必须用普通用户所以得搞定； 之前不愿意多看几步学习，这不来补课了。 标准添加方式暂时不表,可以参看文章后半部分 记录排错过程 按以上流程正常添加SSH之后，但是无法正常克隆项目到本地，使用 ssh -T git@github.</description></item><item><title>用 Github actions 编译任意路由器固件</title><link>https://ixxmu.github.io/posts/play/how-to-build-openwrt-using-github-action/</link><pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate><guid>https://ixxmu.github.io/posts/play/how-to-build-openwrt-using-github-action/</guid><description>给Glinet-MT-300Nv2编译最新xray固件
Update：10092021
因为Github限制资源的滥用，所以之前在线编辑config文件并编译的行为失效无法正常进行，请转到 大佬新仓库 继续拉取使用，新的逻辑为第一步仅生成对应设备的config文件，然后获取config内容，第二步将内容写进要编译的固件文件夹下面的 .config 文件，不要打开SSH在线编辑，重新编译即可。
分割线以下内容依旧有助于理解固件和在线编译的逻辑。
其实一直手里的Glinet-MT-300Nv2用着还算可以，直到v2ray分支诞生了xtls版的xray，新的配置方式虽然在手机或者电脑端用起来差别不大，但是在路由器端特别是这些个垃圾路由器不带AES解密的设备上就直接拉满了，所以就尝试在很久不更新固件的Glinet-MT-300Nv2上面尝试自己编译固件。
整个代码来自Github上的 别人项目,但是原作者删库跑路估计是不想折腾了，还是要感谢下大佬。这也提醒我们在Github上fork项目后pull项目前必须看一眼，万一大佬们改变主意失联了呢。</description></item><item><title>如何用Github actions部署Hugo博客到gh-pages</title><link>https://ixxmu.github.io/posts/play/how-to-deploy-hugo-on-github-with-actions/</link><pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate><guid>https://ixxmu.github.io/posts/play/how-to-deploy-hugo-on-github-with-actions/</guid><description>其实这是一篇重建博客的文章，新的方式只为更稳定更快更方便更少的调试。
为何会再次用这个方式部署博客？因为
Blogdown 生成的博客环境在 Rstudio 中时灵时不灵，我不可能每一次重装都要把 Blogdown 折腾一遍，真是太过分了； Blogdown安装在 CentOS 7 下面有个巨大的坑（这个随后提到如何解决），我就是要避免安装Blogdown，快速开始写字； 博客写作环境可以更简单点的，虽然用Blogdown+Netfliy+Github你可以成功，但是不够灵活和通用； 方法都是现成的，要做的就是优化流程； 开始前你需要了解什么是Github、Actions、gh-pages、Git以及Hugo以及这样折腾下来一套流程对你是不是适用。 本文主要用来记录这样重建过程。 详细流程 1.</description></item></channel></rss>